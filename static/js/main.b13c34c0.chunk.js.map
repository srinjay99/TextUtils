{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","message","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","App","setMode","_useState3","_useState4","setAlert","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b13c34c0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>{props.alert.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">{props.aboutText}</a>\r\n                        </li>\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    <div className={`form-check form-switch text-${props.mode===`light`?`dark`:`light`}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode===`light`?`dark`:`light`} mode </label>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: `Set title here`,\r\n    aboutText: `About Us`\r\n}","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"! Converted to Uppercase\", \"success\");\r\n    }\r\n    const handleLowClick = () => {\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"! Converted to Lowercase\", \"success\");\r\n\r\n    }\r\n\r\n    const handleClearClick=()=>{\r\n        setText(\"\");\r\n        props.showAlert(\"! Text Cleared\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(`myBox`);\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"! Copied to clipboard\", \"success\");\r\n    }\r\n\r\n    const handleRemoveExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/); \r\n        // Learn Regular Expression in vanilla JS to understand /[ ]+/\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"! Extra spaces removed\", \"success\");\r\n    }\r\n\r\n    const [text, setText] = useState(`Enter text here`);\r\n    // text=\"new Text\" //Wrong way to change the state\r\n    // setText(\"new Text\"); //Correct way to change the state\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color: props.mode===`dark`?`white`:`black`}}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea\r\n                        className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode===`dark`?`#042743`:`white`, color: props.mode===`dark`?`white`:`black`}}\r\n                        id=\"myBox\"\r\n                        rows=\"8\"\r\n                    ></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-3 my-3\" onClick={handleUpClick}>Convert to Upper Case</button>\r\n                <button className=\"btn btn-primary mx-3 my-3\" onClick={handleLowClick}>Convert to Lower Case</button>\r\n                <button className=\"btn btn-primary mx-3 my-3\" onClick={handleClearClick}>Clear Text</button>\r\n                <button className=\"btn btn-primary mx-3 my-3\" onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-3 my-3\" onClick={handleRemoveExtraSpaces}>Remove Extra Spaces</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: props.mode===`dark`?`white`:`black`}}>\r\n                <h3>Your text summary</h3>\r\n                <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n                <h4>Preview</h4>\r\n                <p>{text.length>0?text:`Enter something to preview it here`}</p>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import {\n//   BrowserRouter,\n//   Routes,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(`light`); //Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === `light`) {\n      setMode(`dark`);\n      document.body.style.backgroundColor = `#042743`;\n      showAlert(\"! Dark mode has been enabled\", \"success\");\n    }\n    else {\n      setMode(`light`);\n      document.body.style.backgroundColor = `white`;\n      showAlert(\"! Light mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n      {/* **IMPORTANT **\n      For React Router Dom, in React v6 and above:\n      Anshika Paliwal\n      3 months ago (edited)(May 2022)\n      For who so ever has made it till here, might find a blank screen appearing when compiling, so help yourself by making the changes as indicated below:\n      First import:\n      import {\n        BrowserRouter,\n        Routes,\n        Route,\n        Link\n      } from \"react-router-dom\";\n\n      Then,\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/about\" element={<About />} />\n          < Route path=\"/\"\n            element={<TextForm heading=\"Enter the text to analyse: \" mode={mode} />} />\n        </Routes>\n      </BrowserRouter>\n\n      The issue is due to upgradation of React from v5 to v6. */}\n      {/* <BrowserRouter> */}\n        {/* <Navbar title=\"TextUtils\" aboutText=\"About Us\" /> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes> */}\n            {/* /users --> Component 1\n            /users/home --> Component 2 */}\n            {/* <Route exact path=\"/about\" element={<About />} />\n            <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />} /> */}\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          {/* </Routes> */}\n        </div>\n      {/* // </BrowserRouter> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}